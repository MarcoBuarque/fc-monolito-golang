// Code generated by mockery v1.0.0. DO NOT EDIT.

package usecasemocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import repository "github.com/MarcoBuarque/fc-monolito-golang/internal/modules/product_adm/repository"

// IUpdateSalesPriceUseCase is an autogenerated mock type for the IUpdateSalesPriceUseCase type
type IUpdateSalesPriceUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, productID, price
func (_m *IUpdateSalesPriceUseCase) Execute(ctx context.Context, productID string, price float32) (repository.Product, error) {
	ret := _m.Called(ctx, productID, price)

	var r0 repository.Product
	if rf, ok := ret.Get(0).(func(context.Context, string, float32) repository.Product); ok {
		r0 = rf(ctx, productID, price)
	} else {
		r0 = ret.Get(0).(repository.Product)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, float32) error); ok {
		r1 = rf(ctx, productID, price)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
