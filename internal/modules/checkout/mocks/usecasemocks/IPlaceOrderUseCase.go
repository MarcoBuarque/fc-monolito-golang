// Code generated by mockery v1.0.0. DO NOT EDIT.

package usecasemocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import placeorder "github.com/MarcoBuarque/fc-monolito-golang/internal/modules/checkout/usecase/place_order"
import repository "github.com/MarcoBuarque/fc-monolito-golang/internal/modules/checkout/repository"

// IPlaceOrderUseCase is an autogenerated mock type for the IPlaceOrderUseCase type
type IPlaceOrderUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, clientID, products
func (_m *IPlaceOrderUseCase) Execute(ctx context.Context, clientID string, products []placeorder.ProductInfo) (repository.Order, error) {
	ret := _m.Called(ctx, clientID, products)

	var r0 repository.Order
	if rf, ok := ret.Get(0).(func(context.Context, string, []placeorder.ProductInfo) repository.Order); ok {
		r0 = rf(ctx, clientID, products)
	} else {
		r0 = ret.Get(0).(repository.Order)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, []placeorder.ProductInfo) error); ok {
		r1 = rf(ctx, clientID, products)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
